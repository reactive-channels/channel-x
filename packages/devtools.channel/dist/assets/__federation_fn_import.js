import{__vitePreload as m}from"./preload-helper.1c7e1629.js";let p,n,_,y=(async()=>{const t={vue:{get:()=>()=>h("./__federation_shared_vue.js"),import:!0}},o=Object.create(null);p=async function(e,a="default"){return o[e]?new Promise(r=>r(o[e])):await _(e,a)||n(e)};async function h(s){return m(()=>import(s).then(async e=>(await e.__tla,e)),[])}_=async function(e,a){var i,c,l;let r=null;if((c=(i=globalThis==null?void 0:globalThis.__federation_shared__)==null?void 0:i[a])!=null&&c[e]){const u=globalThis.__federation_shared__[a][e],d=Object.keys(u)[0],f=Object.values(u)[0];if((l=t[e])!=null&&l.requiredVersion){const g=(await m(()=>import("./__federation_lib_semver.js"),[])).satisfy;g(d,t[e].requiredVersion)?r=(await f.get())():console.log(`provider support ${e}(${d}) is not satisfied requiredVersion(${t[e].requiredVersion})`)}else r=(await f.get())()}if(r)return o[e]=r,r},n=async function(e,a){var r;if((r=t[e])!=null&&r.import){const i=(await t[e].get())();return o[e]=i,i}else console.error("consumer config import=false,so cant use callback shared module")}})();export{y as __tla,p as importShared,n as importSharedLocal,_ as importSharedRuntime};
//# sourceMappingURL=__federation_fn_import.js.map
